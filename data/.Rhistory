library(grid)
library(magick)
library(ggpubr)
setwd("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data")
# Inicializamos una lista vacía para almacenar los errores
errores <- list()
# Función para procesar cada archivo CSV de una región
procesar_archivo <- function(codigo_region) {
codigo_region<-"R01"
# Seleccionamos NDVI o SAVI según el código de la región
tipo_dato <- ifelse(codigo_region %in% c("R01", "R02", "R15"), "VCI", "VCI")
# Construimos la ruta completa del archivo
ruta_archivo <- paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo_region, "/", tipo_dato, "/", codigo_region, "_", tipo_dato, "_barras_region.csv")
# Construimos la ruta completa del archivo
ruta_archivo_comunas <- paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo_region, "/", tipo_dato, "/", tipo_dato, "_comunas.csv")
# Extraemos la carpeta de la ruta del archivo
carpeta <- dirname(ruta_archivo)
tryCatch({
df <- read.csv(ruta_archivo)
colnames(df)<-c("fecha","VCI")
n_columnas<-ncol(df)
n_filas<-nrow(df)
mediano_historico <- median(df$VCI)
mediano_actual<-df$VCI[n_filas]
mediano_anterior<-df$VCI[n_filas-1]
codigo_region <- codigo_region
VCI_df<-data.frame(codigo_region,mediano_actual,mediano_anterior)
# Guardamos el archivo en la misma carpeta donde se encuentra el archivo original
write.csv(VCI_df, paste0(carpeta, "/VCI_", codigo_region, ".csv"), row.names = FALSE)
df_comunas <- read.csv(ruta_archivo_comunas)
#top peores comunas
n_columnas_comunas<-ncol(df_comunas)
df_sort<-arrange(df_comunas,(df_comunas[,n_columnas_comunas]))
#comunas_vc_min<-data.frame(df_comunas$comuna,df_comunas[,n_columnas_comunas])
comunas_vci_min<-df_sort[1:5,]
colnames(comunas_vci_min)<-c("comuna","vci")
write.csv(comunas_vci_min, paste0(carpeta, "/comunas_vci_min_", codigo_region, ".csv"), row.names = FALSE)
#top peores comunas
df_sort$condicion <- sapply(df_comunas[,n_columnas_comunas], function(VCI) {
if (VCI <= 10) {
"Desfavorable\nextrema"
} else if (VCI <= 20) {
"Desfavorable\nsevera"
} else if (VCI <= 30) {
"Desfavorable\nmoderada"
} else if (VCI <= 40) {
"Desfavorable\nleve"
} else {
"Favorable"
}
})
# Crear un DataFrame que contiene todas las posibles condiciones y sus rangos
df_categorias <- data.frame(
Rango = c("[0,10]", "(10,20]", "(20,30]", "(30,40]", "(40,100]"),
Condiciones = c("Desfavorable\nextrema", "Desfavorable\nsevera", "Desfavorable\nmoderada", "Desfavorable\nleve", "Favorable"),
Comunas = rep(0, 5)  # Inicializar la columna Comunas con ceros
)
# Usar la función table para contar las frecuencias de cada condición en df_sort
conteo_condiciones <- table(df_sort$condicion)
# Actualizar la columna Comunas en df_categorias basada en el conteo
for (cond in names(conteo_condiciones)) {
idx <- which(df_categorias$Condiciones == cond)
if (length(idx) > 0) {
df_categorias$Comunas[idx] <- conteo_condiciones[cond]
}
}
df_categoriast <- as.data.frame(t(df_categorias))
df_categoriast[1,]
colnames(df_categoriast)<-df_categoriast[1,]
df_categoriast<-df_categoriast[2:3,]
df_categoriast
rownames(df_categoriast)<-c("Condición","Nº de comunas")
# Personalizar el tema de la tabla
my_theme <- ttheme(
colnames.style = colnames_style(color = "black", fill = "#e5e5e5"),
tbody.style = tbody_style(color = "black", fill = c("#f2f2f2", "#f2f2f2")),
rownames.style = rownames_style(color = "black", fill = "#e5e5e5")
)
# Crear la tabla con ggtexttable
tabla <- ggtexttable(df_categoriast, theme = my_theme)
# Guardar la tabla como un archivo PNG
ggsave( paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/export", "/", codigo_region,"/","VCI/", codigo_region, "_RESUMEN_VCI.png"), tabla, width = 10, height = 6)
# Ruta de la imagen guardada
imagen_path <- paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/export", "/", codigo_region,"/","VCI/", codigo_region, "_RESUMEN_VCI.png")
# Leer la imagen
imagen <- image_read(imagen_path)
# Recortar la imagen (eliminando el espacio en blanco)
imagen_cropped <- image_trim(imagen)
# Guardar la imagen recortada
image_write(imagen_cropped, imagen_path)
}, error = function(e) {
errores <<- c(errores, list(paste("Error con", codigo_region, ":", e)))
})
}
# Códigos de las 16 regiones
codigos_regiones <- sprintf("R%02d", 1:16)  # Genera "R01", "R02", ..., "R16"
# Aplicamos la función a cada código de región
for(codigo in codigos_regiones) {
procesar_archivo(codigo)
}
# Imprimimos los errores al final
if (length(errores) > 0) {
cat("Errores encontrados:\n")
for(error in errores) {
cat(error, "\n")
}
} else {
cat("Proceso completado sin errores.\n")
}
library(glue)
library(dplyr)
library(readr)
# Diccionario de regiones
regiones <- c("R15" = "Arica y Parinacota", "R01" = "Tarapacá", "R02" = "Antofagasta", "R03" = "Atacama", "R04" = "Coquimbo",
"R05" = "Valparaíso", "R06" = "OHiggins", "R07" = "Maule", "R08" = "Bío Bío", "R16" = "Ñuble",
"R09" = "Araucanía", "R10" = "Los Lagos", "R11" = "Aysén", "R12" = "Magallanes", "R13" = "Metropolitana",
"R14" = "Los Rios")
regiones_fullname <- c("R15" = "Región de Arica y Parinacota", "R01" = "Región de Tarapacá", "R02" = "Región de Antofagasta", "R03" = "Región de Atacama", "R04" = "Región de Coquimbo",
"R05" = "Región de Valparaíso", "R06" = "Región de O`Higgins", "R07" = "Región del Maule", "R08" = "Región del Bío Bío", "R16" = "Región de Ñuble",
"R09" = "Región de La Araucanía", "R10" = "Región de Los Lagos", "R11" = "Región de Aysén", "R12" = "Región de Magallanes", "R13" = "Región Metropolitana",
"R14" = "Región de Los Rios")
mes <- "Septiembre"
fecha<- "13 al 28 de Agosto de 2023"
errores <- c()
# Crear función para generar el código HTML de cada región
generate_html <- function(region, codigo) {
tryCatch({
VCI <- read_csv(paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo, "/", "VCI", "/VCI_", codigo, ".csv"))
comunas_vci_min <- read_csv(paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo, "/", "VCI", "/comunas_vci_min_", codigo, ".csv"))
mediano_actual <- VCI$mediano_actual
mediano_anterior <- VCI$mediano_anterior
if (mediano_actual<= 10) {
condicion_vci<-"Desfavorable extrema"
} else if (mediano_actual<= 20 & mediano_actual>10) {
condicion_vci<-"Desfavorable severa"
}else if (mediano_actual<= 30 & mediano_actual>20) {
condicion_vci<-"Desfavorable moderada"
} else if (mediano_actual<= 40 & mediano_actual>30) {
condicion_vci<-"Desfavorable leve"
} else  condicion_vci<-"Favorable"
base_url <- glue("http://riesgoclimatico.inia.cl/photos/shares/2023/{mes}/{region}/Indice De Condición De La Vegetación (VCI) (En Evaluación)/{codigo}")
html_template <- glue(
'<p style="text-align: justify;">',
'Para el monitoreo del estado de la vegetación en la Región se utilizó el índice de condición de la vegetación, VCI (Kogan, 1990, 1995). Este índice se encuentra entre valores de 0% a 100%. Valores bajo 40% se asocian a una condición desfavorable en la vegetación, siendo 0% la peor condición histórica y 100% la mejor (tabla 1).</p>',
'<p style="text-align: justify;">',
'En términos globales la Región presentó un valor mediano de VCI de {mediano_actual}% para el período comprendido desde el {fecha}.  A igual período del año pasado presentaba un VCI de {mediano_anterior}% (Fig. 1). De acuerdo a la Tabla 1 la {regiones_fullname[codigo]}, en términos globales presenta una condición {condicion_vci}.</p>',
'<p style="text-align: center;"><strong>Tabla 1.</strong>&nbsp;Clasificaci&oacute;n de la condici&oacute;n de la vegetaci&oacute;n de acuerdo a los valores del &iacute;ndice VCI.</p>',
'<p style="text-align: center;"><strong><img src="http://riesgoclimatico.inia.cl/storage//leyenda.png" alt="" width="1000" height="171" /></strong></p>',
'<p style="text-align: center;">&nbsp;</p>',
'<p style="text-align: center;"><strong>Tabla 2.</strong> Resumen de la condición de la vegetación comunal en la Región de acuerdo al análisis del índice VCI.</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_RESUMEN_VCI.png" alt="" width="1000" height="150" />',
'<p style="text-align: justify;">',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_regional.png" alt="" width="1000" height="333" />',
'<p style="text-align: center;"><strong>Figura 1.</strong> Valores del índice VCI para el mismo período entre los años 2000 al 2022 para la {regiones_fullname[codigo]}',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_regional_Matorrales.png" alt="" width="1000" height="333" />',
'<p style="text-align: center;"><strong>Figura 2.</strong> Valores promedio de VCI en Matorrales en la {regiones_fullname[codigo]}',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_regional_Praderas.png" alt="" width="1000" height="333" />',
'<p style="text-align: center;"><strong>Figura 3.</strong> Valores promedio de VCI en praderas en la {regiones_fullname[codigo]}',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_regional_Agrícolas.png" alt="" width="1000" height="333" />',
'<p style="text-align: center;"><strong>Figura 4.</strong> Valores promedio de VCI en terrenos de uso agrícola en la {regiones_fullname[codigo]}',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI.png" alt="" width="1000" height="1000" />',
'<p style="text-align: center;"><strong>Figura 5.</strong> Valores comunales promedio de VCI en la {regiones_fullname[codigo]} de acuerdo a las clasificación de la Tabla 1.',
'<p style="text-align: center;">&nbsp;</p>',
'<p style="text-align: justify;">',
'Las comunas que presentan los valores más bajos del índice VCI en la Región corresponden a {comunas_vci_min[1,1]}, {comunas_vci_min[2,1]}, {comunas_vci_min[3,1]}, {comunas_vci_min[4,1]} y {comunas_vci_min[5,1]} con {comunas_vci_min[1,2]}, {comunas_vci_min[2,2]}, {comunas_vci_min[3,2]}, {comunas_vci_min[4,2]} y {comunas_vci_min[5,2]}% de VCI respectivamente.</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_comunas.png" alt="" width="1000" height="1000" />',
'<p style="text-align: center;"><strong>Figura 6.</strong> Valores del índice VCI para las 5 comunas con valores más bajos del índice del {fecha}.',
)
return(html_template)
},
error = function(e) {
errores <<- c(errores, paste("Error en la región", region, ":", e$message))
},
warning = function(w) {
errores <<- c(errores, paste("Advertencia en la región", region, ":", w$message))
})
}
# Ciclo sobre las regiones para generar y guardar el código HTML
for (codigo in names(regiones)) {
region <- regiones[codigo]
# Generar el código HTML para la región
html_codigo <- generate_html(region, codigo)
# Guardar el código HTML en un archivo
html_file <- file(paste0("D:/Texto/HTML_VCI_", region, ".txt"), "w")
writeLines(html_codigo, con = html_file, sep = "\n")
# Cerrar el archivo de texto
close(html_file)
}
#Mostrar los errores al final si hay alguno
if (length(errores) > 0) {
cat("Errores y/o advertencias encontrados:\n")
print(errores)
}
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
library(magick)
library(ggpubr)
setwd("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data")
# Inicializamos una lista vacía para almacenar los errores
errores <- list()
# Función para procesar cada archivo CSV de una región
procesar_archivo <- function(codigo_region) {
# Seleccionamos NDVI o SAVI según el código de la región
tipo_dato <- ifelse(codigo_region %in% c("R01", "R02", "R15"), "VCI", "VCI")
# Construimos la ruta completa del archivo
ruta_archivo <- paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo_region, "/", tipo_dato, "/", codigo_region, "_", tipo_dato, "_barras_region.csv")
# Construimos la ruta completa del archivo
ruta_archivo_comunas <- paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo_region, "/", tipo_dato, "/", tipo_dato, "_comunas.csv")
# Extraemos la carpeta de la ruta del archivo
carpeta <- dirname(ruta_archivo)
tryCatch({
df <- read.csv(ruta_archivo)
colnames(df)<-c("fecha","VCI")
n_columnas<-ncol(df)
n_filas<-nrow(df)
mediano_historico <- median(df$VCI)
mediano_actual<-df$VCI[n_filas]
mediano_anterior<-df$VCI[n_filas-1]
codigo_region <- codigo_region
VCI_df<-data.frame(codigo_region,mediano_actual,mediano_anterior)
# Guardamos el archivo en la misma carpeta donde se encuentra el archivo original
write.csv(VCI_df, paste0(carpeta, "/VCI_", codigo_region, ".csv"), row.names = FALSE)
df_comunas <- read.csv(ruta_archivo_comunas)
#top peores comunas
n_columnas_comunas<-ncol(df_comunas)
df_sort<-arrange(df_comunas,(df_comunas[,n_columnas_comunas]))
#comunas_vc_min<-data.frame(df_comunas$comuna,df_comunas[,n_columnas_comunas])
comunas_vci_min<-df_sort[1:5,]
colnames(comunas_vci_min)<-c("comuna","vci")
write.csv(comunas_vci_min, paste0(carpeta, "/comunas_vci_min_", codigo_region, ".csv"), row.names = FALSE)
#top peores comunas
df_sort$condicion <- sapply(df_comunas[,n_columnas_comunas], function(VCI) {
if (VCI <= 10) {
"Desfavorable\nextrema"
} else if (VCI <= 20) {
"Desfavorable\nsevera"
} else if (VCI <= 30) {
"Desfavorable\nmoderada"
} else if (VCI <= 40) {
"Desfavorable\nleve"
} else {
"Favorable"
}
})
# Crear un DataFrame que contiene todas las posibles condiciones y sus rangos
df_categorias <- data.frame(
Rango = c("[0,10]", "(10,20]", "(20,30]", "(30,40]", "(40,100]"),
Condiciones = c("Desfavorable\nextrema", "Desfavorable\nsevera", "Desfavorable\nmoderada", "Desfavorable\nleve", "Favorable"),
Comunas = rep(0, 5)  # Inicializar la columna Comunas con ceros
)
# Usar la función table para contar las frecuencias de cada condición en df_sort
conteo_condiciones <- table(df_sort$condicion)
# Actualizar la columna Comunas en df_categorias basada en el conteo
for (cond in names(conteo_condiciones)) {
idx <- which(df_categorias$Condiciones == cond)
if (length(idx) > 0) {
df_categorias$Comunas[idx] <- conteo_condiciones[cond]
}
}
df_categoriast <- as.data.frame(t(df_categorias))
df_categoriast[1,]
colnames(df_categoriast)<-df_categoriast[1,]
df_categoriast<-df_categoriast[2:3,]
df_categoriast
rownames(df_categoriast)<-c("Condición","Nº de comunas")
# Personalizar el tema de la tabla
my_theme <- ttheme(
colnames.style = colnames_style(color = "black", fill = "#e5e5e5"),
tbody.style = tbody_style(color = "black", fill = c("#f2f2f2", "#f2f2f2")),
rownames.style = rownames_style(color = "black", fill = "#e5e5e5")
)
# Crear la tabla con ggtexttable
tabla <- ggtexttable(df_categoriast, theme = my_theme)
# Guardar la tabla como un archivo PNG
ggsave( paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/export", "/", codigo_region,"/","VCI/", codigo_region, "_RESUMEN_VCI.png"), tabla, width = 10, height = 6)
# Ruta de la imagen guardada
imagen_path <- paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/export", "/", codigo_region,"/","VCI/", codigo_region, "_RESUMEN_VCI.png")
# Leer la imagen
imagen <- image_read(imagen_path)
# Recortar la imagen (eliminando el espacio en blanco)
imagen_cropped <- image_trim(imagen)
# Guardar la imagen recortada
image_write(imagen_cropped, imagen_path)
}, error = function(e) {
errores <<- c(errores, list(paste("Error con", codigo_region, ":", e)))
})
}
# Códigos de las 16 regiones
codigos_regiones <- sprintf("R%02d", 1:16)  # Genera "R01", "R02", ..., "R16"
# Aplicamos la función a cada código de región
for(codigo in codigos_regiones) {
procesar_archivo(codigo)
}
# Imprimimos los errores al final
if (length(errores) > 0) {
cat("Errores encontrados:\n")
for(error in errores) {
cat(error, "\n")
}
} else {
cat("Proceso completado sin errores.\n")
}
library(glue)
library(dplyr)
library(readr)
# Diccionario de regiones
regiones <- c("R15" = "Arica y Parinacota", "R01" = "Tarapacá", "R02" = "Antofagasta", "R03" = "Atacama", "R04" = "Coquimbo",
"R05" = "Valparaíso", "R06" = "OHiggins", "R07" = "Maule", "R08" = "Bío Bío", "R16" = "Ñuble",
"R09" = "Araucanía", "R10" = "Los Lagos", "R11" = "Aysén", "R12" = "Magallanes", "R13" = "Metropolitana",
"R14" = "Los Rios")
regiones_fullname <- c("R15" = "Región de Arica y Parinacota", "R01" = "Región de Tarapacá", "R02" = "Región de Antofagasta", "R03" = "Región de Atacama", "R04" = "Región de Coquimbo",
"R05" = "Región de Valparaíso", "R06" = "Región de O`Higgins", "R07" = "Región del Maule", "R08" = "Región del Bío Bío", "R16" = "Región de Ñuble",
"R09" = "Región de La Araucanía", "R10" = "Región de Los Lagos", "R11" = "Región de Aysén", "R12" = "Región de Magallanes", "R13" = "Región Metropolitana",
"R14" = "Región de Los Rios")
mes <- "Octubre"
fecha<- "14 al 29 de Septiembre de 2023"
errores <- c()
# Crear función para generar el código HTML de cada región
generate_html <- function(region, codigo) {
tryCatch({
VCI <- read_csv(paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo, "/", "VCI", "/VCI_", codigo, ".csv"))
comunas_vci_min <- read_csv(paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo, "/", "VCI", "/comunas_vci_min_", codigo, ".csv"))
mediano_actual <- VCI$mediano_actual
mediano_anterior <- VCI$mediano_anterior
if (mediano_actual<= 10) {
condicion_vci<-"Desfavorable extrema"
} else if (mediano_actual<= 20 & mediano_actual>10) {
condicion_vci<-"Desfavorable severa"
}else if (mediano_actual<= 30 & mediano_actual>20) {
condicion_vci<-"Desfavorable moderada"
} else if (mediano_actual<= 40 & mediano_actual>30) {
condicion_vci<-"Desfavorable leve"
} else  condicion_vci<-"Favorable"
base_url <- glue("http://riesgoclimatico.inia.cl/photos/shares/2023/{mes}/{region}/Indice De Condición De La Vegetación (VCI) (En Evaluación)/{codigo}")
html_template <- glue(
'<p style="text-align: justify;">',
'Para el monitoreo del estado de la vegetación en la Región se utilizó el índice de condición de la vegetación, VCI (Kogan, 1990, 1995). Este índice se encuentra entre valores de 0% a 100%. Valores bajo 40% se asocian a una condición desfavorable en la vegetación, siendo 0% la peor condición histórica y 100% la mejor (tabla 1).</p>',
'<p style="text-align: justify;">',
'En términos globales la Región presentó un valor mediano de VCI de {mediano_actual}% para el período comprendido desde el {fecha}.  A igual período del año pasado presentaba un VCI de {mediano_anterior}% (Fig. 1). De acuerdo a la Tabla 1 la {regiones_fullname[codigo]}, en términos globales presenta una condición {condicion_vci}.</p>',
'<p style="text-align: center;"><strong>Tabla 1.</strong>&nbsp;Clasificaci&oacute;n de la condici&oacute;n de la vegetaci&oacute;n de acuerdo a los valores del &iacute;ndice VCI.</p>',
'<p style="text-align: center;"><strong><img src="http://riesgoclimatico.inia.cl/storage//leyenda.png" alt="" width="1000" height="171" /></strong></p>',
'<p style="text-align: center;">&nbsp;</p>',
'<p style="text-align: center;"><strong>Tabla 2.</strong> Resumen de la condición de la vegetación comunal en la Región de acuerdo al análisis del índice VCI.</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_RESUMEN_VCI.png" alt="" width="1000" height="150" />',
'<p style="text-align: justify;">',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_regional.png" alt="" width="1000" height="333" />',
'<p style="text-align: center;"><strong>Figura 1.</strong> Valores del índice VCI para el mismo período entre los años 2000 al 2022 para la {regiones_fullname[codigo]}',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_regional_Matorrales.png" alt="" width="1000" height="333" />',
'<p style="text-align: center;"><strong>Figura 2.</strong> Valores promedio de VCI en Matorrales en la {regiones_fullname[codigo]}',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_regional_Praderas.png" alt="" width="1000" height="333" />',
'<p style="text-align: center;"><strong>Figura 3.</strong> Valores promedio de VCI en praderas en la {regiones_fullname[codigo]}',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_regional_Agrícolas.png" alt="" width="1000" height="333" />',
'<p style="text-align: center;"><strong>Figura 4.</strong> Valores promedio de VCI en terrenos de uso agrícola en la {regiones_fullname[codigo]}',
'<p style="text-align: center;">&nbsp;</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI.png" alt="" width="1000" height="1000" />',
'<p style="text-align: center;"><strong>Figura 5.</strong> Valores comunales promedio de VCI en la {regiones_fullname[codigo]} de acuerdo a las clasificación de la Tabla 1.',
'<p style="text-align: center;">&nbsp;</p>',
'<p style="text-align: justify;">',
'Las comunas que presentan los valores más bajos del índice VCI en la Región corresponden a {comunas_vci_min[1,1]}, {comunas_vci_min[2,1]}, {comunas_vci_min[3,1]}, {comunas_vci_min[4,1]} y {comunas_vci_min[5,1]} con {comunas_vci_min[1,2]}, {comunas_vci_min[2,2]}, {comunas_vci_min[3,2]}, {comunas_vci_min[4,2]} y {comunas_vci_min[5,2]}% de VCI respectivamente.</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_VCI_barras_comunas.png" alt="" width="1000" height="1000" />',
'<p style="text-align: center;"><strong>Figura 6.</strong> Valores del índice VCI para las 5 comunas con valores más bajos del índice del {fecha}.',
)
return(html_template)
},
error = function(e) {
errores <<- c(errores, paste("Error en la región", region, ":", e$message))
},
warning = function(w) {
errores <<- c(errores, paste("Advertencia en la región", region, ":", w$message))
})
}
# Ciclo sobre las regiones para generar y guardar el código HTML
for (codigo in names(regiones)) {
region <- regiones[codigo]
# Generar el código HTML para la región
html_codigo <- generate_html(region, codigo)
# Guardar el código HTML en un archivo
html_file <- file(paste0("D:/Texto/HTML_VCI_", region, ".txt"), "w")
writeLines(html_codigo, con = html_file, sep = "\n")
# Cerrar el archivo de texto
close(html_file)
}
#Mostrar los errores al final si hay alguno
if (length(errores) > 0) {
cat("Errores y/o advertencias encontrados:\n")
print(errores)
}
library(glue)
library(dplyr)
# Diccionario de regiones
regiones <- c("R15" = "Arica y Parinacota", "R01" = "Tarapacá", "R02" = "Antofagasta", "R03" = "Atacama", "R04" = "Coquimbo",
"R05" = "Valparaíso", "R06" = "OHiggins", "R07" = "Maule", "R08" = "Bío Bío", "R16" = "Ñuble",
"R09" = "Araucanía", "R10" = "Los Lagos", "R11" = "Aysén", "R12" = "Magallanes", "R13" = "Metropolitana",
"R14" = "Los Rios")
errores <- c()
# Crear función para generar el código HTML de cada región
generate_html <- function(region, codigo) {
indice <- ifelse(codigo %in% c("R01", "R02", "R15"), "SAVI", "NDVI")
ruta_csv <- paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo, "/", indice, "/region_", codigo, ".csv")
tryCatch({
df_filtrado <- read.csv(ruta_csv)
mes <- "Octubre"
promedio_actual <- round(df_filtrado$promedio_actual, 2)
promedio_anterior <- round(df_filtrado$promedio_anterior, 2)
historico <- round(df_filtrado$historico, 2)
base_url <- glue("http://riesgoclimatico.inia.cl/photos/shares/2023/{mes}/{region}/Análisis Del Índice De Vegetación Ajustado al Suelo (SAVI)/{codigo}")
html_template <- glue(
'<p style="text-align: justify;">',
'Respecto de la respuesta fisiológica de las plantas al efecto del clima, las imágenes satelitales reflejan la magnitud del crecimiento o disminución de la cobertura vegetal en esta época del año mediante el índice de vegetación SAVI (Desviación Normalizada del Índice de Vegetación Ajustado al Suelo).</p>',
'<p style="text-align: justify;">',
'Para esta quincena se observa un SAVI promedio regional de {promedio_actual} mientras el año pasado había sido de {promedio_anterior}. El valor promedio histórico para esta región, en este período del año es de {historico}.</p>',
'<p>El resumen regional en el contexto temporal se puede observar en el siguiente gráfico.</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_SAVI_barras_regional.png" alt="" width="1000" height="333" />',
'<p>La situación por comunas se presenta en el siguiente gráfico, donde se presentan las comunas con índices más bajos.</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_SAVI_barras_comunas.png" alt="" width="1000" height="877" />',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_SAVI.png" alt="" width="1000" height="976" />',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_ANOMALIA_SAVI.png" alt="" width="1000" height="846" />',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_DIFERENCIA_SAVI.png" alt="" width="1000" height="846" />'
)
return(html_template)
},
error = function(e) {
errores <<- c(errores, paste("Error en la región", region, ":", e$message))
},
warning = function(w) {
errores <<- c(errores, paste("Advertencia en la región", region, ":", w$message))
})
}
# Ciclo sobre las regiones para generar y guardar el código HTML
for (codigo in names(regiones)) {
region <- regiones[codigo]
# Generar el código HTML para la región
html_codigo <- generate_html(region, codigo)
# Guardar el código HTML en un archivo
html_file <- file(paste0("D:/Texto/HTML_SAVI_", region, ".txt"), "w")
writeLines(html_codigo, con = html_file, sep = "\n")
# Cerrar el archivo de texto
close(html_file)
}
#Mostrar los errores al final si hay alguno
if (length(errores) > 0) {
cat("Errores y/o advertencias encontrados:\n")
print(errores)
}
library(glue)
library(dplyr)
# Diccionario de regiones
regiones <- c("R15" = "Arica y Parinacota", "R01" = "Tarapacá", "R02" = "Antofagasta", "R03" = "Atacama", "R04" = "Coquimbo",
"R05" = "Valparaíso", "R06" = "OHiggins", "R07" = "Maule", "R08" = "Bío Bío", "R16" = "Ñuble",
"R09" = "Araucanía", "R10" = "Los Lagos", "R11" = "Aysén", "R12" = "Magallanes", "R13" = "Metropolitana",
"R14" = "Los Rios")
errores <- c()
# Crear función para generar el código HTML de cada región
generate_html <- function(region, codigo) {
indice <- ifelse(codigo %in% c("R01", "R02", "R15"), "SAVI", "NDVI")
ruta_csv <- paste0("C:/Users/Marcel/Desktop/mapas_boletin/mapas_boletin/data/", codigo, "/", indice, "/region_", codigo, ".csv")
tryCatch({
df_filtrado <- read.csv(ruta_csv)
mes <- "Octubre"
promedio_actual <- round(df_filtrado$promedio_actual, 2)
promedio_anterior <- round(df_filtrado$promedio_anterior, 2)
historico <- round(df_filtrado$historico, 2)
base_url <- glue("http://riesgoclimatico.inia.cl/photos/shares/2023/{mes}/{region}/Análisis Del Indice De Vegetación Normalizado (NDVI)/{codigo}")
html_template <- glue(
'<p style="text-align: justify;">',
'Respecto de la respuesta fisiológica de las plantas al efecto del clima, las imágenes satelitales reflejan la magnitud del crecimiento o disminución de la cobertura vegetal en esta época del año mediante el índice de vegetación NDVI (Desviación Normalizada del Índice de Vegetación).</p>',
'<p style="text-align: justify;">',
'Para esta quincena se observa un NDVI promedio regional de {promedio_actual} mientras el año pasado había sido de {promedio_anterior}. El valor promedio histórico para esta región, en este período del año es de {historico}.</p>',
'<p>El resumen regional en el contexto temporal se puede observar en el siguiente gráfico.</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_NDVI_barras_regional.png" alt="" width="1000" height="333" />',
'<p>La situación por comunas se presenta en el siguiente gráfico, donde se presentan las comunas con índices más bajos.</p>',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_NDVI_barras_comunas.png" alt="" width="1000" height="877" />',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_NDVI.png" alt="" width="1000" height="976" />',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_ANOMALIA_NDVI.png" alt="" width="1000" height="846" />',
'<img style="display: block; margin-left: auto; margin-right: auto;" src="{base_url}_DIFERENCIA_NDVI.png" alt="" width="1000" height="846" />'
)
return(html_template)
},
error = function(e) {
errores <<- c(errores, paste("Error en la región", region, ":", e$message))
},
warning = function(w) {
errores <<- c(errores, paste("Advertencia en la región", region, ":", w$message))
})
}
# Ciclo sobre las regiones para generar y guardar el código HTML
for (codigo in names(regiones)) {
region <- regiones[codigo]
# Generar el código HTML para la región
html_codigo <- generate_html(region, codigo)
# Guardar el código HTML en un archivo
html_file <- file(paste0("D:/Texto/HTML_NDVI_", region, ".txt"), "w")
writeLines(html_codigo, con = html_file, sep = "\n")
# Cerrar el archivo de texto
close(html_file)
}
#Mostrar los errores al final si hay alguno
if (length(errores) > 0) {
cat("Errores y/o advertencias encontrados:\n")
print(errores)
}
